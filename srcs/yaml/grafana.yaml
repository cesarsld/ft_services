apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafanaapp
spec:
  type: NodePort
  ports:
  - port: 3000
    nodePort: 3000
    protocol: TCP
    name: http
  selector:
    app: grafanaapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  labels:
    app: grafanaapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafanaapp
  template:
    metadata:
      labels:
        app: grafanaapp
    spec:
      containers:
      - name: grafana
        image: services/grafana
        ports:
        - containerPort: 3000
        imagePullPolicy: Never
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: default
spec:
  rules:
  - http:
      paths:
      - path: /grafana
        backend:
          serviceName: grafana
          servicePort: 3000

# apiVersion: v1
# kind: Service
# metadata:
#   name: grafana
#   labels:
#     app: grafanaapp
# spec:
#   type: NodePort
#   ports:
#   - port: 3000
#     nodePort: 3000
#     protocol: TCP
#     name: http
#   selector:
#     app: grafanaapp
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: grafana-deployment
#   labels:
#     app: grafanaapp
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: grafanaapp
#   template:
#     metadata:
#       labels:
#         app: grafanaapp
#     spec:
#       containers:
#       - name: grafana
#         image: services/grafana
#         ports:
#         - containerPort: 3000
#         imagePullPolicy: Never
# ---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: grafana-ingress
#   namespace: default
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /grafana
#         backend:
#           serviceName: grafana
#           servicePort: 3000